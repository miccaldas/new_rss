[
{"title": "\n    ", "links": "#start-of-content", "content": "Ryan Sleevi, September 2019", "images": []},
{"title": "\n  ", "links": "https://github.com/", "content": "In the beginning was the cookie, and it was good. It was a time when the root zone was small, cookies were simple, and small furry creatures from Alpha Centauri were real small furry creatures from Alpha Centauri. With the exception that none of this was ever true.", "images": []},
{"title": "\n  ", "links": "/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo", "content": "When cookies were first introduced, the idea was simple: anybody who registered a domain could take advantage of this hot new storage/persistence layer. If you registered ", "images": []},
{"title": "\n  ", "links": "/features", "content": ", then you could do whatever you wanted and set whatever cookie you wanted, for any host in the ", "images": []},
{"title": "\n\n  ", "links": "/mobile", "content": " domain namespace - because it was your domain. This worked for the few generic TLDs (gTLDs) that were set up by ", "images": []},
{"title": "\n", "links": "/features/actions", "content": ", but was known to break down when it came to country code TLDs (ccTLDs), that did what they wanted and made their own rules. Whether this was ", "images": []},
{"title": "Public Suffix List Problems", "links": "/features/codespaces", "content": " which divided into states and cities, or ", "images": []},
{"title": "missing", "links": "/features/packages", "content": ", which had its own subdivisions mirroring the gTLDs, such as ", "images": []},
{"title": "missing", "links": "/features/security", "content": " and ", "images": []},
{"title": "missing", "links": "/features/code-review", "content": ".", "images": []},
{"title": "missing", "links": "/features/issues", "content": "This divergence between the gTLD and ccTLD set led to browsers to implement a ", "images": []},
{"title": "missing", "links": "/features/integrations", "content": ", which were ", "images": []},
{"title": "missing", "links": "/sponsors", "content": ". However, the fundamental assumption, at the time of introduction, was that the party who registered the domain was in control of all content that appeared on their domain, and below it. The cookie boundary was not even seen as a ", "images": []},
{"title": "missing", "links": "/customer-stories", "content": " - it was merely indicative of a misconfigured or spammy server causing more work for itself.", "images": []},
{"title": "missing", "links": "/team", "content": "Originally, this logic was only constrained to cookies, and implemented directly within the cookie parsing algorithm, as specified both by the Netscape spec and the later-proposed ", "images": []},
{"title": "missing", "links": "/enterprise", "content": ". As part of the work for Firefox 3, which introduced Places, Mozilla worked to ", "images": []},
{"title": "missing", "links": "/explore", "content": ", introducing with it the notion of the \u201ceffective TLD.\u201d By extracting the logic from the cookie processing algorithm itself, this allowed Mozilla to group cookies and other settings across more easily managed logical boundaries, without having to duplicate the logic or come up with new heuristics. The \u201ceffective TLD\u201d took into consideration ccTLD\u2019s registration policies, which were painstakingly ", "images": []},
{"title": "missing", "links": "/topics", "content": ", and which ultimately gave birth to what we now know as the ", "images": []},
{"title": "missing", "links": "/collections", "content": ".", "images": []},
{"title": "missing", "links": "/trending", "content": "Parallel to this work, the notion of the Same-Origin Policy (SOP) was evolving. Michal Zalewski\u2019s ", "images": []},
{"title": "missing", "links": "https://lab.github.com/", "content": " best captures this evolution, which was not a single policy, but a number of similar policies, such as around ", "images": []},
{"title": "missing", "links": "https://opensource.guide", "content": ", ", "images": []},
{"title": "missing", "links": "/readme", "content": ", and various plugins. Unlike cookies, which considered the boundary to be the \u201cregistered domain,\u201d the SOP focused specifically on the combination of scheme, host, and port being an \u201cexact\u201d match", "images": []},
{"title": "missing", "links": "/events", "content": ".", "images": []},
{"title": "missing", "links": "https://github.community", "content": "Over the years, the divergence between how the SOP is applicable in different contexts has been reduced, such that there are, effectively, two main security boundaries in the Web today: the SOP boundary (e.g. as used by fetch()/XMLHttpRequest/CORS) and the cookie boundary (quasi-shared with ", "images": []},
{"title": "missing", "links": "https://education.github.com", "content": "). As a consequence, browser developers who want to introduce new features are faced with a question: Should that feature use the origin as the boundary (implying the SOP) or should it use the \u201cregistrable domain\u201d as the boundary (implying the PSL)?", "images": []},
{"title": "missing", "links": "https://stars.github.com", "content": "The PSL tends to be suggested when trying to solve questions of ", "images": []},
{"title": "missing", "links": "/marketplace", "content": " - who is the responsible party for the content and what it does?", "images": []},
{"title": "missing", "links": "/pricing", "content": "The problem, however, is that the Public Suffix List is an ineffective solution for each of these questions, with real and damaging tradeoffs.", "images": []},
{"title": "missing", "links": "/pricing#compare-features", "content": "When it comes to ", "images": []},
{"title": "missing", "links": "https://github.com/enterprise/contact", "content": ", the PSL has a problem in that its default assumption is that all subdomains within a given domain share the same security boundary. Absent an entry on the Public Suffix List, the default is that it will \u201cfail open\u201d and allow aggregation on the nearest boundary, which will \u201chopefully\u201d be a realistic registrable domain. For example, when App Engine was introduced, it was necessary to add ", "images": []},
{"title": "missing", "links": "https://education.github.com", "content": " to the PSL, in order to ensure that ", "images": []},
{"title": "missing", "links": "", "content": " would not be able to access the cookies of ", "images": []},
{"title": "missing", "links": "", "content": ". This approach to management puts the burden on domain holders, by starting off as a ", "images": []},
{"title": "missing", "links": "", "content": " configuration. Because the PSL is, in all major browsers (and programming languages and clients), a static list, this means domain holders can\u2019t offer new services \u201csecurely\u201d until all existing copies in the ecosystem have updated to recognize their service. This is bad for the Web: ", "images": []},
{"title": "missing", "links": "", "content": ".", "images": []},
{"title": "missing", "links": "/login?return_to=https%3A%2F%2Fgithub.com%2Fsleevi%2Fpsl-problems", "content": "When it comes to ", "images": []},
{"title": "missing", "links": "/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=sleevi%2Fpsl-problems", "content": ", the same default assumptions as security bite here. The default assumption is to assume \u201csameness\u201d at the registrable domain level. This means any new use of subdomains requires care to get privacy right, and even then, ", "images": []},
{"title": "missing", "links": "/sleevi", "content": " because of the update lag.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems", "content": "Worse, however, is when services don\u2019t realize this, and thus have customers on the same subdomains as their \u2018production\u2019 domains. The same assumptions the browser is making that allows ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " to seamlessly work with ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " ends up allowing ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " full access! The site operator that wants to protect against this, by adding themselves to the PSL, has to make a choice: Do they break their customer URLs or their URLs?", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/stargazers", "content": "In addition to breaking site operators\u2019 expectations, it also breaks browsers\u2019 expectations. The PSL is commonly used to infer organizational boundaries; if there is \u201csameness\u201d of the domain, it must be \u201cfirst party\u201d or the same organization, while if it\u2019s a different domain, it must be a different organization, or \u201cthird party\u201d. However, these assumptions break down, because there\u2019s no guarantee that ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/network/members", "content": " and ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " are the same entity. If the site operator is presumed malicious and trying to exchange information, it\u2019s trivial for them to configure a CNAME such that ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " points to ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems", "content": ", bypassing the normal restrictions that might apply to loading ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/issues", "content": " from ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/pulls", "content": ", because, to the browser, both ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/actions", "content": " and ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/security", "content": " are operated by ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/pulse", "content": ".", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems", "content": "Recall that the PSL was originally introduced to solve a ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/issues", "content": " problem, by attempting to group settings and cookies for registrable domains together into a more manageable interface. It can be tempting to use that same logic in other places, to try and make the settings more accessible. The problem is that the default aggregation algorithm doesn\u2019t align with the recommendations to ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/pulls", "content": ", because it ends up collapsing disparate entities into one interface. It also leaves it ambiguous how to solve for hosting providers - should ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/actions", "content": " be collapsed into a single entry, or should it display for all of them?", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/security", "content": "It\u2019s tempting to use the PSL for ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/pulse", "content": " purposes, such as quotas or process limits. However, this approach either penalizes domain holders or is easily circumvented. Similar to the usability question, it opens a hard question about whether the limit should be based on ", "images": []},
{"title": "missing", "links": "https://github.com/sleevi/psl-problems/tree/{{ urlEncodedRefName }}", "content": " or its subdomains, each potentially operated by different entities.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/branches", "content": "If you limit based on the subdomains, ", "images": []},
{"title": "missing", "links": "https://github.com/sleevi/psl-problems/tree/{{ urlEncodedRefName }}", "content": " by simply adding themselves to the PSL and claiming different entities control their subdomains, even if that\u2019s not the case. For example, if each registrable domain gets a 5KB quota for a given object, then the adversary just says that ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/tags", "content": " is a public suffix, allowing them to get unlimited quota by simply minting subdomains. Yet the alternative, to apply the limit based on the TLD settings, penalizes the hosting provider ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/branches", "content": " by causing all of their customers to be limited to an ever decreasing slice of that 5KB pie.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/tags", "content": "Beyond these issues, though, there\u2019s a more generalized issue: Since the Public Suffix List has ", "images": []},
{"title": "missing", "links": "/sleevi", "content": " and the introduction ICANN gTLD program, growth of the list is no longer bounded by the number of countries in the world and how they might administer their ccTLDs. ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commits?author=sleevi", "content": " with the number of new domains introduced and their desire to add subdomains. This creates a real problem, as there is some limit to be reached in which the utility of inclusion is outweighed by the cost to end users, in terms of memory and bandwidth. At some point, it will need to be replaced, and ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": ".", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": "Consider, for example, when Let\u2019s Encrypt introduced rate limits based on the eTLD. The PSL saw an incredible and sustained growth in pull requests, as domain holders tried to get around those limits. Some of these may be legitimate, but others were not, highlighting how the PSL is ineffective at distinguishing good use cases from bad. Equally terrifying, however, is how many providers only discovered the existence of the PSL once LE was using it to rate limit - meaning that their users were able to influence cookies and other storage without restriction, until an incidental change (wanting to get more certs) caused the server operator to realize.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": "Beyond this growth, however, there is an issue that, unlike ccTLDs, which are \u201cforever\u201d (for some value of forever), and gTLDs, which are expected to be a bit more stable than they are today, domains themselves experience high churn, and ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": ". Functionally, this means that the growth rate of the PSL is unbounded, because of the potential harms caused by removing or culling existing entries.", "images": []},
{"title": "missing", "links": "https://github.com/sleevi/psl-problems/issues/2", "content": "Consider, for example, that ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commits/master", "content": ", the first domain added to the PSL, is no longer an Opera service offering. Can it be removed from the PSL? For the PSL maintainers, it\u2019s unknown; the domain is still registered, and Opera hasn\u2019t requested removal, so should the fact that it\u2019s no longer being used for new domains justify removing it? If Opera did request removal, and it were removed, what are the implications to browsers and software which previously recognized it as an eTLD? For example, if the browser had local state or cookies associated, what are the impacts if it was removed?", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/tree/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": "In practice, it\u2019s impossible for the PSL maintainers to reason about the implications of removal, even in the presence of explicit requests from the domain holder, and these problems are even messier when contemplating domain expirations or transfers, which may or may not be safe to remove or possible to reliably authenticate.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/blob/master/README.md", "content": "This isn\u2019t easy to retrofit on either - despite nearly a decade of engagement with ICANN, ccTLDs aren\u2019t inherently bound in the way gTLDs are, and already go against best practices, so we\u2019re unlikely to get ccTLDs to adopt a new scheme. And any change that affects (and potentially removes) the private domains can have security consequences to the user and be undetected by the domain operator - ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": "The answer is ", "images": []},
{"title": "missing", "links": "#public-suffix-list-problems", "content": ". For anything new, you should ", "images": []},
{"title": "missing", "links": "#public-suffix-list-past-to-present", "content": ".", "images": []},
{"title": "missing", "links": "#problems-solutions-later", "content": "That\u2019s not a question! However, the use case of the Public Suffix List has traditionally fallen on one of three dimensions: trying to solve for ", "images": []},
{"title": "missing", "links": "#faq", "content": ", ", "images": []},
{"title": "missing", "links": "#should-i-use-the-public-suffix-listetld1-for-", "content": ", or ", "images": []},
{"title": "missing", "links": "#wait-i-wasnt-finished", "content": ". The problem is that it under-delivers and over-promises on all three of these dimensions, leading to privacy, security, or usability ", "images": []},
{"title": "missing", "links": "#so-what-am-i-supposed-to-use-instead", "content": ", often worse than the ones it was trying to resolve.", "images": []},
{"title": "missing", "links": "#developers-dont-like-how-restrictive-the-sop-is-are-you-sure-its-the-right-idea", "content": "In general, you\u2019ll have far fewer security and privacy issues if you adopt the Same Origin Policy instead. While more restrictive, the consistency with the existing Web Platform, particularly Javascript, is far more desirable, in that it simplifies reasoning about the feature and any of its interactions with the Web Platform.", "images": []},
{"title": "missing", "links": "#what-are-we-going-to-do-about-cookies-then", "content": "It\u2019s true, the SOP is a mighty hammer to wield, and it\u2019s far more restrictive than simply eTLD+1. As it\u2019s used today, eTLD+1 is often trying to be a shorthand for \u201cassociated with the same organization\u201d, and alternative expressions of such associations (such as explored by DBOUND or First Party Sets) may be stepping stones towards more flexible expressions. However, using eTLD+1 to try and approximate that does not work, because it defaults to an insecure state of assuming different origins are related, requiring sites to opt-out in order to maintain security or privacy boundaries, and can be easily circumvented through adding to the PSL or through the use of CNAMEs to bypass any intended restrictions.", "images": []},
{"title": "missing", "links": "#are-you-really-saying-the-strategy-is-hope", "content": "Hope for the best, and that clever folks can find a path to deprecating cookies\u2019 big assumption? It\u2019s important to note that the cookie security policy already is a huge security and privacy gap, long known, and that provides greater incentives for more daring fixes to the platform. We need to figure out what the happy path looks like - how to support existing use cases, but with a more declarative syntax or safer defaults. The ", "images": []},
{"title": "missing", "links": "#if-that-doesnt-work", "content": " explores one possible long-term effort, by fully replacing cookies. Alternatively, declarative syntaxes like ", "images": []},
{"title": "missing", "links": "#are-you-sure-there-are-no-good-uses-for-the-public-suffix-list", "content": " might pave a path to deprecating cookies\u2019 Domain attribute, while still facilitating the use cases that it enables.", "images": []},
{"title": "missing", "links": "#how-am-i-supposed-to-figure-out-reputation-for-a-domain", "content": "Maybe? Rome wasn\u2019t built in a day, and this is definitely not an easy task. Getting rid of the dependencies on the Public Suffix List, and breaking some of the assumptions, is a long-term effort with no easy answers. However, it\u2019s only made harder when new features are built on assuming that the registrable domain is a reasonable boundary. That\u2019s why it\u2019s so important to avoid that for new features, and to make sure we\u2019re dealing with the core security/privacy/usability issues, rather than papering them over. Declarative expressions of relationships, rather than implicitly assuming based on the domain hierarchy, better reflects the world as it is.", "images": []},
{"title": "missing", "links": "#notes", "content": "Even if the Web Platform is never able to fully excise cookies-as-they-are, there is still considerable complexity in having new features depend on the PSL. No matter how \u201ccookie-like\u201d a thing is, using the PSL for a new feature makes it hard to reason about the interactions and relationship with the Same Origin Policy.", "images": []},
{"title": "missing", "links": "#readme", "content": "Much of this document is focused on aspects specific to the browser and the Web Platform. While cookies straddle that line \u2014 being most commonly experienced in the context of the Web Platform, but also possible to use in purely HTTP-based exchanges (like APIs) \u2014 the fact that they have one (very large) foot in the Web means we have to do better.", "images": []},
{"title": "missing", "links": "#public-suffix-list-problems", "content": "However, other uses may not touch on the browser at all, and it might be reasonable to use the PSL. For example, some use cases make use of the PSL to determine whether or not to \u2018linkify\u2019 a given string, like ", "images": []},
{"title": "missing", "links": "https://publicsuffix.org/", "content": ". Strictly speaking, what these use cases are after is having a list of all valid TLDs - the Root Zone Database - and it just so happens that the PSL has a full copy of the RZD within it. Switching to ", "images": []},
{"title": "missing", "links": "#public-suffix-list-past-to-present", "content": " the Root Zone Database would be far more preferable here, but using the PSL is not all doom and gloom compared to the Web.", "images": []},
{"title": "missing", "links": "https://tools.ietf.org/html/rfc920", "content": "Another use of the PSL in non-browser cases tends to be about associating reputation. For example, if malicious content is found on a site, what\u2019s the appropriate level to show and display a warning \u2014 for that origin, or for all domains associated with that entity?", "images": []},
{"title": "missing", "links": "https://bugzilla.mozilla.org/show_bug.cgi?id=252342", "content": "This is functionally an example of the ", "images": []},
{"title": "missing", "links": "https://web.archive.org/web/19970101073348/http://www.netscape.com/newsref/std/cookie_spec.html", "content": " issue, which adversaries can game by adding themselves to the list, thus causing it to seem as if domains are different operating entities when they\u2019re the same, but is crucial for having \u2018good\u2019 actors, such as ", "images": []},
{"title": "missing", "links": "https://bugzilla.mozilla.org/show_bug.cgi?id=8743#c5", "content": " or ", "images": []},
{"title": "missing", "links": "https://tools.ietf.org/html/rfc2109", "content": " highlight/disclaim responsibility. It\u2019s been known that the PSL syntax is not expressive enough to handle how entities manage their domains today, such as Amazon and S3 buckets, but it\u2019s what people are used to. The solutions here are going to vary based on the specific problem, but solutions like ", "images": []},
{"title": "missing", "links": "https://bugzilla.mozilla.org/show_bug.cgi?id=319643", "content": " and suited for the task.", "images": []},
{"title": "missing", "links": "https://bugzilla.mozilla.org/show_bug.cgi?id=342314", "content": ": This is slightly fuzzy, for example, when taking to account that the default port may be omitted from the URL but still be semantically equivalent.", "images": []},
{"title": "missing", "links": "https://publicsuffix.org", "content": "missing", "images": []},
{"title": "missing", "links": "https://code.google.com/archive/p/browsersec/wikis/Part2.wiki#Same-origin_policy", "content": "missing", "images": []},
{"title": "missing", "links": "#footnote1", "content": "missing", "images": []},
{"title": "missing", "links": "#problems-solutions-later", "content": "missing", "images": []},
{"title": "missing", "links": "https://chromium.googlesource.com/chromium/src/+/master/docs/security/url_display_guidelines/url_display_guidelines.md", "content": "missing", "images": []},
{"title": "missing", "links": "https://hg.mozilla.org/mozilla-central/rev/b7c6f08e35b3a8447270097ab916b19fe00b31fc", "content": "missing", "images": []},
{"title": "missing", "links": "#faq", "content": "missing", "images": []},
{"title": "missing", "links": "#should-i-use-the-public-suffix-listetld1-for-", "content": "missing", "images": []},
{"title": "missing", "links": "#wait-i-wasnt-finished", "content": "missing", "images": []},
{"title": "missing", "links": "#so-what-am-i-supposed-to-use-instead", "content": "missing", "images": []},
{"title": "missing", "links": "#developers-dont-like-how-restrictive-the-sop-is-are-you-sure-its-the-right-idea", "content": "missing", "images": []},
{"title": "missing", "links": "#what-are-we-going-to-do-about-cookies-then", "content": "missing", "images": []},
{"title": "missing", "links": "https://mikewest.github.io/http-state-tokens/draft-west-http-state-tokens.html", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com/mikewest/first-party-sets", "content": "missing", "images": []},
{"title": "missing", "links": "#are-you-really-saying-the-strategy-is-hope", "content": "missing", "images": []},
{"title": "missing", "links": "#if-that-doesnt-work", "content": "missing", "images": []},
{"title": "missing", "links": "#are-you-sure-there-are-no-good-uses-for-the-public-suffix-list", "content": "missing", "images": []},
{"title": "missing", "links": "#how-am-i-supposed-to-figure-out-reputation-for-a-domain", "content": "missing", "images": []},
{"title": "missing", "links": "https://www.ietf.org/mailman/listinfo/dbound", "content": "missing", "images": []},
{"title": "missing", "links": "#notes", "content": "missing", "images": []},
{"title": "missing", "links": "#readme", "content": "missing", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/stargazers", "content": "missing", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/watchers", "content": "missing", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/network/members", "content": "missing", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/releases", "content": "missing", "images": []},
{"title": "missing", "links": "/users/sleevi/packages?repo_name=psl-problems", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com", "content": "missing", "images": []},
{"title": "missing", "links": "https://docs.github.com/en/github/site-policy/github-terms-of-service", "content": "missing", "images": []},
{"title": "missing", "links": "https://docs.github.com/en/github/site-policy/github-privacy-statement", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com/security", "content": "missing", "images": []},
{"title": "missing", "links": "https://www.githubstatus.com/", "content": "missing", "images": []},
{"title": "missing", "links": "https://docs.github.com", "content": "missing", "images": []},
{"title": "missing", "links": "https://support.github.com?tags=dotcom-footer", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com/pricing", "content": "missing", "images": []},
{"title": "missing", "links": "https://docs.github.com", "content": "missing", "images": []},
{"title": "missing", "links": "https://services.github.com", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.blog", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com/about", "content": "missing", "images": []},
{"title": "missing", "links": "", "content": "missing", "images": []},
{"title": "missing", "links": "", "content": "missing", "images": []}
][
{"title": "\n    ", "links": "#start-of-content", "content": "Ryan Sleevi, September 2019", "images": []},
{"title": "\n  ", "links": "https://github.com/", "content": "In the beginning was the cookie, and it was good. It was a time when the root zone was small, cookies were simple, and small furry creatures from Alpha Centauri were real small furry creatures from Alpha Centauri. With the exception that none of this was ever true.", "images": []},
{"title": "\n  ", "links": "/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo", "content": "When cookies were first introduced, the idea was simple: anybody who registered a domain could take advantage of this hot new storage/persistence layer. If you registered ", "images": []},
{"title": "\n  ", "links": "/features", "content": ", then you could do whatever you wanted and set whatever cookie you wanted, for any host in the ", "images": []},
{"title": "\n\n  ", "links": "/mobile", "content": " domain namespace - because it was your domain. This worked for the few generic TLDs (gTLDs) that were set up by ", "images": []},
{"title": "\n", "links": "/features/actions", "content": ", but was known to break down when it came to country code TLDs (ccTLDs), that did what they wanted and made their own rules. Whether this was ", "images": []},
{"title": "Public Suffix List Problems", "links": "/features/codespaces", "content": " which divided into states and cities, or ", "images": []},
{"title": "missing", "links": "/features/packages", "content": ", which had its own subdivisions mirroring the gTLDs, such as ", "images": []},
{"title": "missing", "links": "/features/security", "content": " and ", "images": []},
{"title": "missing", "links": "/features/code-review", "content": ".", "images": []},
{"title": "missing", "links": "/features/issues", "content": "This divergence between the gTLD and ccTLD set led to browsers to implement a ", "images": []},
{"title": "missing", "links": "/features/integrations", "content": ", which were ", "images": []},
{"title": "missing", "links": "/sponsors", "content": ". However, the fundamental assumption, at the time of introduction, was that the party who registered the domain was in control of all content that appeared on their domain, and below it. The cookie boundary was not even seen as a ", "images": []},
{"title": "missing", "links": "/customer-stories", "content": " - it was merely indicative of a misconfigured or spammy server causing more work for itself.", "images": []},
{"title": "missing", "links": "/team", "content": "Originally, this logic was only constrained to cookies, and implemented directly within the cookie parsing algorithm, as specified both by the Netscape spec and the later-proposed ", "images": []},
{"title": "missing", "links": "/enterprise", "content": ". As part of the work for Firefox 3, which introduced Places, Mozilla worked to ", "images": []},
{"title": "missing", "links": "/explore", "content": ", introducing with it the notion of the \u201ceffective TLD.\u201d By extracting the logic from the cookie processing algorithm itself, this allowed Mozilla to group cookies and other settings across more easily managed logical boundaries, without having to duplicate the logic or come up with new heuristics. The \u201ceffective TLD\u201d took into consideration ccTLD\u2019s registration policies, which were painstakingly ", "images": []},
{"title": "missing", "links": "/topics", "content": ", and which ultimately gave birth to what we now know as the ", "images": []},
{"title": "missing", "links": "/collections", "content": ".", "images": []},
{"title": "missing", "links": "/trending", "content": "Parallel to this work, the notion of the Same-Origin Policy (SOP) was evolving. Michal Zalewski\u2019s ", "images": []},
{"title": "missing", "links": "https://lab.github.com/", "content": " best captures this evolution, which was not a single policy, but a number of similar policies, such as around ", "images": []},
{"title": "missing", "links": "https://opensource.guide", "content": ", ", "images": []},
{"title": "missing", "links": "/readme", "content": ", and various plugins. Unlike cookies, which considered the boundary to be the \u201cregistered domain,\u201d the SOP focused specifically on the combination of scheme, host, and port being an \u201cexact\u201d match", "images": []},
{"title": "missing", "links": "/events", "content": ".", "images": []},
{"title": "missing", "links": "https://github.community", "content": "Over the years, the divergence between how the SOP is applicable in different contexts has been reduced, such that there are, effectively, two main security boundaries in the Web today: the SOP boundary (e.g. as used by fetch()/XMLHttpRequest/CORS) and the cookie boundary (quasi-shared with ", "images": []},
{"title": "missing", "links": "https://education.github.com", "content": "). As a consequence, browser developers who want to introduce new features are faced with a question: Should that feature use the origin as the boundary (implying the SOP) or should it use the \u201cregistrable domain\u201d as the boundary (implying the PSL)?", "images": []},
{"title": "missing", "links": "https://stars.github.com", "content": "The PSL tends to be suggested when trying to solve questions of ", "images": []},
{"title": "missing", "links": "/marketplace", "content": " - who is the responsible party for the content and what it does?", "images": []},
{"title": "missing", "links": "/pricing", "content": "The problem, however, is that the Public Suffix List is an ineffective solution for each of these questions, with real and damaging tradeoffs.", "images": []},
{"title": "missing", "links": "/pricing#compare-features", "content": "When it comes to ", "images": []},
{"title": "missing", "links": "https://github.com/enterprise/contact", "content": ", the PSL has a problem in that its default assumption is that all subdomains within a given domain share the same security boundary. Absent an entry on the Public Suffix List, the default is that it will \u201cfail open\u201d and allow aggregation on the nearest boundary, which will \u201chopefully\u201d be a realistic registrable domain. For example, when App Engine was introduced, it was necessary to add ", "images": []},
{"title": "missing", "links": "https://education.github.com", "content": " to the PSL, in order to ensure that ", "images": []},
{"title": "missing", "links": "", "content": " would not be able to access the cookies of ", "images": []},
{"title": "missing", "links": "", "content": ". This approach to management puts the burden on domain holders, by starting off as a ", "images": []},
{"title": "missing", "links": "", "content": " configuration. Because the PSL is, in all major browsers (and programming languages and clients), a static list, this means domain holders can\u2019t offer new services \u201csecurely\u201d until all existing copies in the ecosystem have updated to recognize their service. This is bad for the Web: ", "images": []},
{"title": "missing", "links": "", "content": ".", "images": []},
{"title": "missing", "links": "/login?return_to=https%3A%2F%2Fgithub.com%2Fsleevi%2Fpsl-problems", "content": "When it comes to ", "images": []},
{"title": "missing", "links": "/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=sleevi%2Fpsl-problems", "content": ", the same default assumptions as security bite here. The default assumption is to assume \u201csameness\u201d at the registrable domain level. This means any new use of subdomains requires care to get privacy right, and even then, ", "images": []},
{"title": "missing", "links": "/sleevi", "content": " because of the update lag.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems", "content": "Worse, however, is when services don\u2019t realize this, and thus have customers on the same subdomains as their \u2018production\u2019 domains. The same assumptions the browser is making that allows ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " to seamlessly work with ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " ends up allowing ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " full access! The site operator that wants to protect against this, by adding themselves to the PSL, has to make a choice: Do they break their customer URLs or their URLs?", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/stargazers", "content": "In addition to breaking site operators\u2019 expectations, it also breaks browsers\u2019 expectations. The PSL is commonly used to infer organizational boundaries; if there is \u201csameness\u201d of the domain, it must be \u201cfirst party\u201d or the same organization, while if it\u2019s a different domain, it must be a different organization, or \u201cthird party\u201d. However, these assumptions break down, because there\u2019s no guarantee that ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/network/members", "content": " and ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " are the same entity. If the site operator is presumed malicious and trying to exchange information, it\u2019s trivial for them to configure a CNAME such that ", "images": []},
{"title": "missing", "links": "/login?return_to=%2Fsleevi%2Fpsl-problems", "content": " points to ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems", "content": ", bypassing the normal restrictions that might apply to loading ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/issues", "content": " from ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/pulls", "content": ", because, to the browser, both ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/actions", "content": " and ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/security", "content": " are operated by ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/pulse", "content": ".", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems", "content": "Recall that the PSL was originally introduced to solve a ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/issues", "content": " problem, by attempting to group settings and cookies for registrable domains together into a more manageable interface. It can be tempting to use that same logic in other places, to try and make the settings more accessible. The problem is that the default aggregation algorithm doesn\u2019t align with the recommendations to ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/pulls", "content": ", because it ends up collapsing disparate entities into one interface. It also leaves it ambiguous how to solve for hosting providers - should ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/actions", "content": " be collapsed into a single entry, or should it display for all of them?", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/security", "content": "It\u2019s tempting to use the PSL for ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/pulse", "content": " purposes, such as quotas or process limits. However, this approach either penalizes domain holders or is easily circumvented. Similar to the usability question, it opens a hard question about whether the limit should be based on ", "images": []},
{"title": "missing", "links": "https://github.com/sleevi/psl-problems/tree/{{ urlEncodedRefName }}", "content": " or its subdomains, each potentially operated by different entities.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/branches", "content": "If you limit based on the subdomains, ", "images": []},
{"title": "missing", "links": "https://github.com/sleevi/psl-problems/tree/{{ urlEncodedRefName }}", "content": " by simply adding themselves to the PSL and claiming different entities control their subdomains, even if that\u2019s not the case. For example, if each registrable domain gets a 5KB quota for a given object, then the adversary just says that ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/tags", "content": " is a public suffix, allowing them to get unlimited quota by simply minting subdomains. Yet the alternative, to apply the limit based on the TLD settings, penalizes the hosting provider ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/branches", "content": " by causing all of their customers to be limited to an ever decreasing slice of that 5KB pie.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/tags", "content": "Beyond these issues, though, there\u2019s a more generalized issue: Since the Public Suffix List has ", "images": []},
{"title": "missing", "links": "/sleevi", "content": " and the introduction ICANN gTLD program, growth of the list is no longer bounded by the number of countries in the world and how they might administer their ccTLDs. ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commits?author=sleevi", "content": " with the number of new domains introduced and their desire to add subdomains. This creates a real problem, as there is some limit to be reached in which the utility of inclusion is outweighed by the cost to end users, in terms of memory and bandwidth. At some point, it will need to be replaced, and ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": ".", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": "Consider, for example, when Let\u2019s Encrypt introduced rate limits based on the eTLD. The PSL saw an incredible and sustained growth in pull requests, as domain holders tried to get around those limits. Some of these may be legitimate, but others were not, highlighting how the PSL is ineffective at distinguishing good use cases from bad. Equally terrifying, however, is how many providers only discovered the existence of the PSL once LE was using it to rate limit - meaning that their users were able to influence cookies and other storage without restriction, until an incidental change (wanting to get more certs) caused the server operator to realize.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": "Beyond this growth, however, there is an issue that, unlike ccTLDs, which are \u201cforever\u201d (for some value of forever), and gTLDs, which are expected to be a bit more stable than they are today, domains themselves experience high churn, and ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": ". Functionally, this means that the growth rate of the PSL is unbounded, because of the potential harms caused by removing or culling existing entries.", "images": []},
{"title": "missing", "links": "https://github.com/sleevi/psl-problems/issues/2", "content": "Consider, for example, that ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commits/master", "content": ", the first domain added to the PSL, is no longer an Opera service offering. Can it be removed from the PSL? For the PSL maintainers, it\u2019s unknown; the domain is still registered, and Opera hasn\u2019t requested removal, so should the fact that it\u2019s no longer being used for new domains justify removing it? If Opera did request removal, and it were removed, what are the implications to browsers and software which previously recognized it as an eTLD? For example, if the browser had local state or cookies associated, what are the impacts if it was removed?", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/tree/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": "In practice, it\u2019s impossible for the PSL maintainers to reason about the implications of removal, even in the presence of explicit requests from the domain holder, and these problems are even messier when contemplating domain expirations or transfers, which may or may not be safe to remove or possible to reliably authenticate.", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/blob/master/README.md", "content": "This isn\u2019t easy to retrofit on either - despite nearly a decade of engagement with ICANN, ccTLDs aren\u2019t inherently bound in the way gTLDs are, and already go against best practices, so we\u2019re unlikely to get ccTLDs to adopt a new scheme. And any change that affects (and potentially removes) the private domains can have security consequences to the user and be undetected by the domain operator - ", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/commit/500ae401f750a21a7301ed1090f45bf524ab61d8", "content": "The answer is ", "images": []},
{"title": "missing", "links": "#public-suffix-list-problems", "content": ". For anything new, you should ", "images": []},
{"title": "missing", "links": "#public-suffix-list-past-to-present", "content": ".", "images": []},
{"title": "missing", "links": "#problems-solutions-later", "content": "That\u2019s not a question! However, the use case of the Public Suffix List has traditionally fallen on one of three dimensions: trying to solve for ", "images": []},
{"title": "missing", "links": "#faq", "content": ", ", "images": []},
{"title": "missing", "links": "#should-i-use-the-public-suffix-listetld1-for-", "content": ", or ", "images": []},
{"title": "missing", "links": "#wait-i-wasnt-finished", "content": ". The problem is that it under-delivers and over-promises on all three of these dimensions, leading to privacy, security, or usability ", "images": []},
{"title": "missing", "links": "#so-what-am-i-supposed-to-use-instead", "content": ", often worse than the ones it was trying to resolve.", "images": []},
{"title": "missing", "links": "#developers-dont-like-how-restrictive-the-sop-is-are-you-sure-its-the-right-idea", "content": "In general, you\u2019ll have far fewer security and privacy issues if you adopt the Same Origin Policy instead. While more restrictive, the consistency with the existing Web Platform, particularly Javascript, is far more desirable, in that it simplifies reasoning about the feature and any of its interactions with the Web Platform.", "images": []},
{"title": "missing", "links": "#what-are-we-going-to-do-about-cookies-then", "content": "It\u2019s true, the SOP is a mighty hammer to wield, and it\u2019s far more restrictive than simply eTLD+1. As it\u2019s used today, eTLD+1 is often trying to be a shorthand for \u201cassociated with the same organization\u201d, and alternative expressions of such associations (such as explored by DBOUND or First Party Sets) may be stepping stones towards more flexible expressions. However, using eTLD+1 to try and approximate that does not work, because it defaults to an insecure state of assuming different origins are related, requiring sites to opt-out in order to maintain security or privacy boundaries, and can be easily circumvented through adding to the PSL or through the use of CNAMEs to bypass any intended restrictions.", "images": []},
{"title": "missing", "links": "#are-you-really-saying-the-strategy-is-hope", "content": "Hope for the best, and that clever folks can find a path to deprecating cookies\u2019 big assumption? It\u2019s important to note that the cookie security policy already is a huge security and privacy gap, long known, and that provides greater incentives for more daring fixes to the platform. We need to figure out what the happy path looks like - how to support existing use cases, but with a more declarative syntax or safer defaults. The ", "images": []},
{"title": "missing", "links": "#if-that-doesnt-work", "content": " explores one possible long-term effort, by fully replacing cookies. Alternatively, declarative syntaxes like ", "images": []},
{"title": "missing", "links": "#are-you-sure-there-are-no-good-uses-for-the-public-suffix-list", "content": " might pave a path to deprecating cookies\u2019 Domain attribute, while still facilitating the use cases that it enables.", "images": []},
{"title": "missing", "links": "#how-am-i-supposed-to-figure-out-reputation-for-a-domain", "content": "Maybe? Rome wasn\u2019t built in a day, and this is definitely not an easy task. Getting rid of the dependencies on the Public Suffix List, and breaking some of the assumptions, is a long-term effort with no easy answers. However, it\u2019s only made harder when new features are built on assuming that the registrable domain is a reasonable boundary. That\u2019s why it\u2019s so important to avoid that for new features, and to make sure we\u2019re dealing with the core security/privacy/usability issues, rather than papering them over. Declarative expressions of relationships, rather than implicitly assuming based on the domain hierarchy, better reflects the world as it is.", "images": []},
{"title": "missing", "links": "#notes", "content": "Even if the Web Platform is never able to fully excise cookies-as-they-are, there is still considerable complexity in having new features depend on the PSL. No matter how \u201ccookie-like\u201d a thing is, using the PSL for a new feature makes it hard to reason about the interactions and relationship with the Same Origin Policy.", "images": []},
{"title": "missing", "links": "#readme", "content": "Much of this document is focused on aspects specific to the browser and the Web Platform. While cookies straddle that line \u2014 being most commonly experienced in the context of the Web Platform, but also possible to use in purely HTTP-based exchanges (like APIs) \u2014 the fact that they have one (very large) foot in the Web means we have to do better.", "images": []},
{"title": "missing", "links": "#public-suffix-list-problems", "content": "However, other uses may not touch on the browser at all, and it might be reasonable to use the PSL. For example, some use cases make use of the PSL to determine whether or not to \u2018linkify\u2019 a given string, like ", "images": []},
{"title": "missing", "links": "https://publicsuffix.org/", "content": ". Strictly speaking, what these use cases are after is having a list of all valid TLDs - the Root Zone Database - and it just so happens that the PSL has a full copy of the RZD within it. Switching to ", "images": []},
{"title": "missing", "links": "#public-suffix-list-past-to-present", "content": " the Root Zone Database would be far more preferable here, but using the PSL is not all doom and gloom compared to the Web.", "images": []},
{"title": "missing", "links": "https://tools.ietf.org/html/rfc920", "content": "Another use of the PSL in non-browser cases tends to be about associating reputation. For example, if malicious content is found on a site, what\u2019s the appropriate level to show and display a warning \u2014 for that origin, or for all domains associated with that entity?", "images": []},
{"title": "missing", "links": "https://bugzilla.mozilla.org/show_bug.cgi?id=252342", "content": "This is functionally an example of the ", "images": []},
{"title": "missing", "links": "https://web.archive.org/web/19970101073348/http://www.netscape.com/newsref/std/cookie_spec.html", "content": " issue, which adversaries can game by adding themselves to the list, thus causing it to seem as if domains are different operating entities when they\u2019re the same, but is crucial for having \u2018good\u2019 actors, such as ", "images": []},
{"title": "missing", "links": "https://bugzilla.mozilla.org/show_bug.cgi?id=8743#c5", "content": " or ", "images": []},
{"title": "missing", "links": "https://tools.ietf.org/html/rfc2109", "content": " highlight/disclaim responsibility. It\u2019s been known that the PSL syntax is not expressive enough to handle how entities manage their domains today, such as Amazon and S3 buckets, but it\u2019s what people are used to. The solutions here are going to vary based on the specific problem, but solutions like ", "images": []},
{"title": "missing", "links": "https://bugzilla.mozilla.org/show_bug.cgi?id=319643", "content": " and suited for the task.", "images": []},
{"title": "missing", "links": "https://bugzilla.mozilla.org/show_bug.cgi?id=342314", "content": ": This is slightly fuzzy, for example, when taking to account that the default port may be omitted from the URL but still be semantically equivalent.", "images": []},
{"title": "missing", "links": "https://publicsuffix.org", "content": "missing", "images": []},
{"title": "missing", "links": "https://code.google.com/archive/p/browsersec/wikis/Part2.wiki#Same-origin_policy", "content": "missing", "images": []},
{"title": "missing", "links": "#footnote1", "content": "missing", "images": []},
{"title": "missing", "links": "#problems-solutions-later", "content": "missing", "images": []},
{"title": "missing", "links": "https://chromium.googlesource.com/chromium/src/+/master/docs/security/url_display_guidelines/url_display_guidelines.md", "content": "missing", "images": []},
{"title": "missing", "links": "https://hg.mozilla.org/mozilla-central/rev/b7c6f08e35b3a8447270097ab916b19fe00b31fc", "content": "missing", "images": []},
{"title": "missing", "links": "#faq", "content": "missing", "images": []},
{"title": "missing", "links": "#should-i-use-the-public-suffix-listetld1-for-", "content": "missing", "images": []},
{"title": "missing", "links": "#wait-i-wasnt-finished", "content": "missing", "images": []},
{"title": "missing", "links": "#so-what-am-i-supposed-to-use-instead", "content": "missing", "images": []},
{"title": "missing", "links": "#developers-dont-like-how-restrictive-the-sop-is-are-you-sure-its-the-right-idea", "content": "missing", "images": []},
{"title": "missing", "links": "#what-are-we-going-to-do-about-cookies-then", "content": "missing", "images": []},
{"title": "missing", "links": "https://mikewest.github.io/http-state-tokens/draft-west-http-state-tokens.html", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com/mikewest/first-party-sets", "content": "missing", "images": []},
{"title": "missing", "links": "#are-you-really-saying-the-strategy-is-hope", "content": "missing", "images": []},
{"title": "missing", "links": "#if-that-doesnt-work", "content": "missing", "images": []},
{"title": "missing", "links": "#are-you-sure-there-are-no-good-uses-for-the-public-suffix-list", "content": "missing", "images": []},
{"title": "missing", "links": "#how-am-i-supposed-to-figure-out-reputation-for-a-domain", "content": "missing", "images": []},
{"title": "missing", "links": "https://www.ietf.org/mailman/listinfo/dbound", "content": "missing", "images": []},
{"title": "missing", "links": "#notes", "content": "missing", "images": []},
{"title": "missing", "links": "#readme", "content": "missing", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/stargazers", "content": "missing", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/watchers", "content": "missing", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/network/members", "content": "missing", "images": []},
{"title": "missing", "links": "/sleevi/psl-problems/releases", "content": "missing", "images": []},
{"title": "missing", "links": "/users/sleevi/packages?repo_name=psl-problems", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com", "content": "missing", "images": []},
{"title": "missing", "links": "https://docs.github.com/en/github/site-policy/github-terms-of-service", "content": "missing", "images": []},
{"title": "missing", "links": "https://docs.github.com/en/github/site-policy/github-privacy-statement", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com/security", "content": "missing", "images": []},
{"title": "missing", "links": "https://www.githubstatus.com/", "content": "missing", "images": []},
{"title": "missing", "links": "https://docs.github.com", "content": "missing", "images": []},
{"title": "missing", "links": "https://support.github.com?tags=dotcom-footer", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com/pricing", "content": "missing", "images": []},
{"title": "missing", "links": "https://docs.github.com", "content": "missing", "images": []},
{"title": "missing", "links": "https://services.github.com", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.blog", "content": "missing", "images": []},
{"title": "missing", "links": "https://github.com/about", "content": "missing", "images": []},
{"title": "missing", "links": "", "content": "missing", "images": []},
{"title": "missing", "links": "", "content": "missing", "images": []}
]